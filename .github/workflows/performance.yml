name: Performance Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # ÂÆöÊúüÁöÑ„Å´ÂÆüË°åÔºàÊØéÊó•ÂçàÂâç3ÊôÇÔºâ
  schedule:
    - cron: '0 3 * * *'
  # ÊâãÂãïÂÆüË°å„Çí„Çµ„Éù„Éº„Éà
  workflow_dispatch:

jobs:
  performance-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Build Next.js application
      run: npm run build
    
    - name: Start Next.js server
      run: |
        npm run start &
        # „Çµ„Éº„Éê„Éº„ÅåËµ∑Âãï„Åô„Çã„ÅÆ„ÇíÂæÖ„Å§
        sleep 15
    
    - name: Install Lighthouse dependencies
      run: npm install -g lighthouse chrome-launcher puppeteer
    
    - name: Run performance tests
      run: node scripts/performance-monitor.js
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance-results/
        retention-days: 90
    
    - name: Check performance thresholds
      run: |
        if [ -f "performance-results/performance-trend.json" ]; then
          # „Éà„É¨„É≥„Éâ„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Çì„ÅßÊÇ™ÂåñÂÇæÂêë„Åå„ÅÇ„Çã„ÅãÁ¢∫Ë™ç
          TREND_CHECK=$(node -e "
            const fs = require('fs');
            const trend = JSON.parse(fs.readFileSync('performance-results/performance-trend.json', 'utf8'));
            let degrading = false;
            
            for (const page in trend) {
              if (trend[page].performanceTrend === 'degrading' || 
                  trend[page].lcpTrend === 'degrading' || 
                  trend[page].clsTrend === 'degrading') {
                degrading = true;
                console.log(\`Warning: Performance degradation detected in \${page}\`);
              }
            }
            
            if (degrading) process.exit(1);
            process.exit(0);
          ")
          
          if [ $? -ne 0 ]; then
            echo "::warning::Performance degradation detected! Check the performance trend report."
          fi
        fi
    
    - name: Create performance report comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          try {
            // ÊúÄÊñ∞„ÅÆÊ∏¨ÂÆöÁµêÊûú„ÇíÂèñÂæó
            const files = fs.readdirSync('./performance-results')
              .filter(file => file.startsWith('performance-results-') && file.endsWith('.json'))
              .sort();
            
            if (files.length === 0) {
              console.log('No performance results found');
              return;
            }
            
            const latestFile = files[files.length - 1];
            const results = JSON.parse(fs.readFileSync(`./performance-results/${latestFile}`, 'utf8'));
            
            // PR„Ç≥„É°„É≥„ÉàÁî®„ÅÆ„Éû„Éº„ÇØ„ÉÄ„Ç¶„É≥„Çí‰ΩúÊàê
            let comment = `## üìä „Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÊ∏¨ÂÆöÁµêÊûú\n\n`;
            
            for (const page of results) {
              comment += `### ${page.name} (${page.url})\n\n`;
              comment += `| ÊåáÊ®ô | ÂÄ§ | ÁõÆÊ®ô | Áä∂ÊÖã |\n`;
              comment += `| --- | --- | --- | --- |\n`;
              
              // „Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„Çπ„Ç≥„Ç¢
              const perfStatus = page.performance >= 80 ? '‚úÖ' : '‚ùå';
              comment += `| „Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„Çπ„Ç≥„Ç¢ | ${page.performance.toFixed(1)}% | 80% | ${perfStatus} |\n`;
              
              // FCP
              const fcpStatus = page.fcp <= 1800 ? '‚úÖ' : '‚ùå';
              comment += `| ÂàùÂõû„Ç≥„É≥„ÉÜ„É≥„ÉÑÊèèÁîª (FCP) | ${(page.fcp/1000).toFixed(2)}Áßí | 1.8Áßí | ${fcpStatus} |\n`;
              
              // LCP
              const lcpStatus = page.lcp <= 2500 ? '‚úÖ' : '‚ùå';
              comment += `| ÊúÄÂ§ß„Ç≥„É≥„ÉÜ„É≥„ÉÑÊèèÁîª (LCP) | ${(page.lcp/1000).toFixed(2)}Áßí | 2.5Áßí | ${lcpStatus} |\n`;
              
              // TTI
              const ttiStatus = page.tti <= 3500 ? '‚úÖ' : '‚ùå';
              comment += `| „Ç§„É≥„Çø„É©„ÇØ„ÉÜ„Ç£„Éñ„Åæ„Åß„ÅÆÊôÇÈñì (TTI) | ${(page.tti/1000).toFixed(2)}Áßí | 3.5Áßí | ${ttiStatus} |\n`;
              
              // CLS
              const clsStatus = page.cls <= 0.1 ? '‚úÖ' : '‚ùå';
              comment += `| Á¥ØÁ©ç„É¨„Ç§„Ç¢„Ç¶„Éà„Ç∑„Éï„Éà (CLS) | ${page.cls.toFixed(3)} | 0.1 | ${clsStatus} |\n\n`;
            }
            
            comment += `\nË©≥Á¥∞„Å™„É¨„Éù„Éº„Éà„ÅØCI/CD„ÅÆÊàêÊûúÁâ©„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n`;
            
            // PR„Å´„Ç≥„É°„É≥„Éà„ÇíËøΩÂä†
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.error('Error creating performance report comment:', error);
          }
